
DB操作用共通API:
  http://13.112.112.160:8080/test/web_do
  
vue.js側で、DB操作用Sample：
    var req = {
      "mode":"select",
      "selectsql":"select cat_id, cat_name, parent_id from ns_cat"
    }
    await this.axios.post('http://13.112.112.160:8080/test/web.do',req).then((response)=>{
      console.log(response.data)
      this.listall = response.data.data
    }).catch((response)=>{
      console.log(response);
    })


DB操作用JSON
１、レコード追加（Insert）
  input用（Browser -> WebServer）
  {
    "mode":"insert",
    "tableName":"xxx",
    "autofield":"xxx",
    "data":{
        "field1":"xxx",
        "field2":"xxx"
    }
  }
  結果用（WebServer -> Browser）
  {
    "rscode":"ok",
    "mode":"insert",    
    "tableName":"xxx",
    "autofield":"xxx",
    "data":{
        "[autofield]":"xxx",
        "field1":"xxx",
        "field2":"xxx"
    }
  }
  
2、更新（Update）
  input用（Browser -> WebServer）
  {
    "mode":"update",
    "tableName":"xxx",
    "wheresql":"xxx",
    "data":{
        "field1":"xxx",
        "field2":"xxx"
    }
  }
  結果用（WebServer -> Browser）
  {
    "rscode":"ok",  
    "mode":"update",
    "tableName":"xxx",
    "wheresql":"xxx",
    "data":{
        "field1":"xxx",
        "field2":"xxx"
    }
  }

3、削除（Delete）
  input用（Browser -> WebServer）
  {
    "mode":"delete",
    "tableName":"xxx",
    "wheresql":"xxx"
  }
  結果用（WebServer -> Browser）
  {
    "rscode":"ok",  
    "mode":"delete",
    "tableName":"xxx",
    "wheresql":"xxx"
  }

4、検索(Select)
  input用（Browser -> WebServer）
  {
    "mode":"select",
    "selectsql":"xxx"
  }
  結果用（WebServer -> Browser）
  {
    "rscode":"ok",  
    "mode":"select",
    "selectsql":"xxx",
    "data":[
        {
        "field1":"xxx",
        "field2":"xxx"
        },
        {
        "field1":"xxx",
        "field2":"xxx"
        }
    ]
  }